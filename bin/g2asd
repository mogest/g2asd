#!/usr/bin/env ruby

$LOAD_PATH << File.expand_path("../lib", File.dirname(__FILE__))

require 'g2asd'

if ARGV.length != 1
  STDERR.puts "Specify the URL you'd like to GET as the first argument"
  exit 1
end

class Storage < ServiceDesk::FileTokenStorage
  attr_accessor :client_id, :client_secret, :redirect_uri

  def initialize
    super

    if @configuration
      @client_id = @configuration["client_id"]
      @client_secret = @configuration["client_secret"]
      @redirect_uri = @configuration["redirect_uri"]
    end
  end

  private

  def additional_fields
    super.merge(
      "client_id" => client_id,
      "client_secret" => client_secret,
      "redirect_uri" => redirect_uri
    )
  end
end

token_storage = Storage.new

if token_storage.client_id.nil?
  puts "To get started, enter your GoToAssist Sprint Desk API version 2 OAuth details:\n\n"

  print "Client ID: "
  token_storage.client_id = gets.chomp

  print "Client secret: "
  token_storage.client_secret = gets.chomp

  begin
    print "Redirect URI (must start with http://localhost...): "
    token_storage.redirect_uri = gets.chomp
  end until token_storage.redirect_uri =~ %r(\Ahttp://localhost)

  token_storage.update!
end

ServiceDesk::Client.configure do |config|
  config.client_id         token_storage.client_id
  config.client_secret     token_storage.client_secret
  config.redirect_uri      token_storage.redirect_uri
  config.api_host          "https://deskapi.gotoassist.com"
  config.authenticate_path "/v2/authenticate/oauth2"
  config.refresh_token     token_storage.refresh_token
  config.token_storage     token_storage
end

client = ServiceDesk::Client.new

if token_storage.refresh_token.nil?
  ServiceDesk::Login.new(client).call
end

token = client.token_from_refresh_token
puts token.get(ARGV[0])
